"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var scrapeIt = require("scrape-it");

module.exports = function () {
    /**
     * BibleScraper
     * Retrieve verses from bible.com/YouVersion. Initializes the `BibleScraper` instance.
     *
     * @name bibleScraper
     * @function
     * @param {Number} translationId The translation id from bible.com.
     */
    function BibleScraper(translationId) {
        _classCallCheck(this, BibleScraper);

        this.translation_id = translationId;
    }

    /**
     * url
     * Returns the Bible url reference from bible.com.
     *
     * @param {String} reference The Bible reference to get the url for.
     * @returns {String} The reference url.
     */


    _createClass(BibleScraper, [{
        key: "url",
        value: function url(reference) {
            // TODO Validation
            return "https://www.bible.com/bible/" + this.translation_id + "/" + reference;
        }

        /**
         * verse
         * Fetches the verse.
         *
         * @param {String} ref The Bible.com verse reference.
         * @returns {Promise} A promise resolving the verse object.
         */

    }, {
        key: "verse",
        value: function verse(ref) {
            return scrapeIt(this.url(ref), {
                content: {
                    selector: ".near-black.lh-copy",
                    eq: 0
                },
                reference: {
                    selector: "h1.f6.f5-m.mb3.near-black",
                    eq: 0
                }
            }).then(function (_ref) {
                var data = _ref.data;

                return data;
            });
        }

        /**
         * chapter
         * Fetches the chapter verses.
         *
         * @param {String} ref The Bible.com chapter reference.
         * @returns {Promise} A promise resolving the chapter object.
         */

    }, {
        key: "chapter",
        value: function chapter(ref) {
            return scrapeIt(this.url(ref), {
                verses: {
                    listItem: ".verse[data-usfm]",
                    data: {
                        content: {
                            selector: ".content",
                            how: "text"
                        },
                        reference: {
                            attr: "data-usfm"
                        }
                    }
                }
            }).then(function (_ref2) {
                var data = _ref2.data;

                data.verses = (data.verses || []).reduce(function (acc, c) {
                    var latest = acc[acc.length - 1];
                    if (latest && latest.reference === c.reference) {
                        latest.content = (latest.content + " " + c.content).trim();
                    } else {
                        acc.push(c);
                    }
                    return acc;
                }, []);
                return data;
            });
        }
    }]);

    return BibleScraper;
}();

// TODO Add the other translation ids
module.exports.TRANSLATIONS = {
    KJV: 1,
    VULG: 823
};